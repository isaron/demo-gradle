apiVersion: skaffold/v1beta13
kind: Config
build:
  # tagPolicy:
  #   envTemplate:
  #     template: "{{.IMAGE_NAME}}:{{.projectVersion}}"
  artifacts:
  - image: containers.ssii.com/com.ssii.rdp/demo-gradle
    context: .
    # sync:
    #   '*.java': .

    # docker:
    #   # Dockerfile's location relative to workspace. Defaults to "Dockerfile"
    #   dockerfile: Dockerfile
    #   # Key/value arguements passed to the docker build.
    #   buildArgs:
    #     key1: "value1"
    #     key2: "value2"
    #   # Images to consider as cache sources
    #   cacheFrom:
    #   - golang:1.10.1-alpine3.7
    #   - alpine:3.7
    #   # Dockerfile target name to build.
    #   # target: stageName

    # Using the Jib plugin for Gradle.
    jibGradle: 
      project: ""

    # kaniko:
    #   image: containers.ssii.com/kaniko/executor:v0.10.0
    #   buildContext:
    #     localDir: {}
    #   cache: {}
  
  local:
    # false by default for local clusters, true for remote clusters
    push: false
    useDockerCLI: false
    useBuildkit: false

  cluster:
    pullSecretName: kaniko-secret
    namespace: default
    dockerConfig:
      secretName: kaniko-secret

deploy:
  # kubectl:
    # manifests to deploy from files.
    # manifests:
    # - ./k8s-*
    # flags:
    #   global: [""]
    #   apply: [""]
    #   delete: [""]

    # manifests to deploy from remote cluster.
    # The path to where these manifests live in remote kubernetes cluster.
    # Example
    # remoteManifests:
    # - deployment/web-app1
    # - namespace:deployment/web-app2

 # kustomize:
    # path: .
    # flags:
    #   global: [""]
    #   apply: [""]
    #   delete: [""]

 helm:
    releases:
    - name: demo-gradle
      chartPath: charts
      #wait: true
      valuesFiles:
      - charts/values.yaml
      skipBuildDependencies: true # Skip helm dep build
      values:
        image: containers.ssii.com/com.ssii.rdp/demo-gradle
      # namespace: demo
      #recreatePods will pass --recreate-pods to helm upgrade
      #recreatePods: true
      #overrides builds an override values.yaml file to run with the helm deploy
      #overrides:
      # some:
      #   key: someValue
      #setValues get appended to the helm deploy with --set.  
      #setValues:
        #some.key: someValue